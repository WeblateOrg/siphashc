name: Distribution

on: [push, pull_request]

jobs:
  manylinux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2.1.3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-setup-${{ hashFiles('**/requirements*.txt') }}
      - name: Set up Python
        uses: actions/setup-python@v2.1.4
        with:
          python-version: 3.8
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip wheel
          pip install twine
      - uses: RalfG/python-wheels-manylinux-build@v0.3.2
        with:
          python-versions: "cp36-cp36m cp37-cp37m cp38-cp38 cp39-cp39"
      - name: twine
        run: twine check dist/*
      - name: Publish package
        if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags')
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.pypi_password }}
        run: twine upload --skip-existing dist/*-manylinux*.whl

  native:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]
        python-version: [3.6, 3.7, 3.8, 3.9]

    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2.1.3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-setup-${{ hashFiles('**/requirements*.txt') }}
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2.1.4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip wheel
          pip install twine
      - name: build
        run: python ./setup.py sdist bdist_wheel
      - name: twine
        run: twine check dist/*
      - name: Publish wheel
        if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags') && matrix.os != 'ubuntu-latest'
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.pypi_password }}
        run: twine upload --skip-existing dist/*.whl
      - name: Publish source
        if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags') && matrix.os == 'ubuntu-latest'
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.pypi_password }}
        run: twine upload --skip-existing dist/*.tar.gz
